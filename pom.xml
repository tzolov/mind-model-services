<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.mindmodel.services</groupId>
	<artifactId>mind-model-services</artifactId>
	<packaging>pom</packaging>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<asciidoctorj.version>1.5.7</asciidoctorj.version>
		<asciidoctor.maven.plugin.version>1.5.7.1</asciidoctor.maven.plugin.version>
		<jmh.version>1.21</jmh.version>
	</properties>

	<modules>
		<module>object-detection</module>
		<module>common</module>
		<module>pose-estimation</module>
		<module>semantic-segmentation</module>
		<module>twitter-sentiment</module>
		<module>image-recognition</module>
		<!--<module>face-detection-mtcnn</module>-->
	</modules>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<!-- This will get hamcrest-core automatically -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.openjdk.jmh</groupId>
			<artifactId>jmh-core</artifactId>
			<version>${jmh.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.openjdk.jmh</groupId>
			<artifactId>jmh-generator-annprocess</artifactId>
			<version>${jmh.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.skyscreamer</groupId>
			<artifactId>jsonassert</artifactId>
			<version>1.5.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>${asciidoctor.maven.plugin.version}</version>
				<configuration>
					<sourceDirectory>src/docs/asciidoc</sourceDirectory>
					<!-- If you set baseDir to ${project.basedir}, top-level includes are resolved relative to the project root -->
					<baseDir>${project.basedir}</baseDir>

					<!-- Attributes common to all output formats -->
					<attributes>
						<endpoint-url>http://mindmodel.io</endpoint-url>
						<sourcedir>${project.build.sourceDirectory}</sourcedir>
						<project-version>${project.version}</project-version>
					</attributes>
					<outputDirectory>${project.basedir}/docs</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<id>asciidoc-to-html</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html5</backend>
							<sourceHighlighter>coderay</sourceHighlighter>
							<!--
							Scenarios for linking vs embedding assets:
							Link to both stylesheets and images::
							  - don't set embedAssets option
							  - set linkcss attribute to true
							  - set imagesdir attribute to path relative to AsciiDoc source file
							  <attributes>
								  <linkcss>true</linkcss>
								  <imagesdir>./images</imagesdir>
							  </attributes>
							Embed stylesheets and images::

							  - set embedAssets option to true
							  - don't set linkcss attribute
							  - set imagesdir attribute to path relative to project root
							  <embedAssets>true</embedAssets>
							  <attributes>
								  <imagesdir>src/docs/asciidoc/images</imagesdir>
							  </attributes>
							Link to stylesheets but embed images::

							  - set embedAssets option to true
							  - set linkcss attribute to true
							  - set imagesdir attribute to path relative to project root
							  <embedAssets>true</embedAssets>
							  <attributes>
								  <linkcss>true</linkcss>
								  <imagesdir>src/docs/asciidoc/images</imagesdir>
							  </attributes>
							Embed stylesheets but link images (default)::

							  - don't set embedAssets option
							  - don't set linkcss attribute
							  - set imagesdir attribute to path relative to AsciiDoc source file
							  <attributes>
								  <imagesdir>./images</imagesdir>
							  </attributes>
							IMPORTANT: When you enable image embedding, you must qualify the path the the imagesdir, as shown above.
							-->
							<attributes>
								<!--<imagesdir>./koza</imagesdir>-->
								<toc>left</toc>
								<icons>font</icons>
								<sectanchors>true</sectanchors>
								<!-- set the idprefix to blank -->
								<idprefix/>
								<idseparator>-</idseparator>
								<docinfo1>true</docinfo1>
							</attributes>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
